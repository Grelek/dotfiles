" Configuration
" """""""""""""
" Install Plug if missing
if empty(glob('~/.config/nvim/autoload/plug.vim'))
	silent !curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

	autocmd VimEnter * PlugInstall
endif

" Plugins
call plug#begin('~/.config/nvim/plugged')
	" EDITOR PLUGINS
	" Required by a lot of Vim plugins
	Plug 'L9'

	" File browser
	Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }

	" Show Git marks in NERDTree
	Plug 'Xuyuanp/nerdtree-git-plugin'

	" Syntax checker
	Plug 'benekastah/neomake', { 'on': 'Neomake' }

	" Easy commenting
	Plug 'scrooloose/nerdcommenter'

	" editorconfig support
	Plug 'editorconfig/editorconfig-vim'

	" Snippets support
	if has('python')
	Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
	endif

	" Queotes, brackets, etc. autocompletion
	Plug 'Raimondi/delimitMate'

	" File fuzzy-finder
	Plug 'kien/ctrlp.vim'

	" Google Material-like color scheme
	Plug 'NLKNguyen/papercolor-theme'

	" badwolf fork
	Plug 'Grelek/badwolf'

	" Lightweight powerline alternative
	Plug 'vim-airline/vim-airline'

	" Themes for airline
	Plug 'vim-airline/vim-airline-themes'

	" Plugin with fantastic support for surrounding
	Plug 'tpope/vim-surround'

	" Distraction-free writing mode
	Plug 'junegunn/goyo.vim', { 'on': 'Goyo' }

	" Colored parentheses
	Plug 'junegunn/rainbow_parentheses.vim', { 'on': 'RainbowParentheses' }

	" Deletes all buffers except the one focused
	Plug 'BufOnly.vim'

	" Preview colors in source
	Plug 'ap/vim-css-color'

	" LANGUAGE PLUGINS
	" GLSL support
	Plug 'tikhomirov/vim-glsl'

	" Better PHP support
	Plug 'StanAngeloff/php.vim'

	" Latte templating language support
	Plug 'Janiczek/vim-latte'

	" Dart support
	Plug 'dart-lang/dart-vim-plugin'

	" Better HTML5 support
	Plug 'othree/html5.vim'

	" LESS CSS support
	Plug 'groenewege/vim-less'

	" Better Python support
	Plug 'hdima/python-syntax'

	" virtualenv support
	Plug 'jmcantrell/vim-virtualenv'

	" Arduino support
	Plug '4Evergreen4/vim-hardy'

	" Rust support
	Plug 'rust-lang/rust.vim'
call plug#end()

" scroloose/NERDTree
let NERDTreeChDirMode=2 "When directory is changed, change CWD, too
let NERDTreeShowHidden=1 "Show hidden files except temp, system & VCS files
let NERDTreeIgnore=[]
for suffix in split(&suffixes, ',')
	let NERDTreeIgnore+=[ escape(suffix, '.~') . '$' ]
endfor
let NERDTreeIgnore+=[
	\'^\.bundle$',
	\'^\.bzr$',
	\'^\.git$',
	\'^\.hg$',
	\'^\.svn$',
	\'^\.$',
	\'^\.\.$',
	\'^Thumbs\.db$']

" benekastah/neomake
let g:neomake_c_enabled_makers=['gcc']
let g:neomake_cpp_enabled_makers=['gcc']
let g:neomake_cpp_gcc_maker={
	\'args': ['--std=c++14']
	\}
let g:neomake_java_enabled_makers=['javac']
let g:neomake_python_enabled_makers=['python']

" SirVer/ultisnips
if has('python')
let g:UltiSnipsExpandTrigger='<c-y>'
let g:UltiSnipsListSnippets='<c-x>'
let g:UltiSnipsJumpForwardTrigger='<c-b>'
let g:UltiSnipsJumpBackwardTrigger='<c-z>'
endif

" dart-lang/dart-vim-plugin
let g:dart_style_guide=1

" kien/ctrlp.vim
let g:airline#extensions#ctrlp#show_adjacent_modes=1

" bling/vim-airline
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#virtualenv#enabled=1
let g:airline_powerline_fonts=0

" junegunn/rainbow_parentheses.vim
let g:rainbow#pairs = [['(', ')'], ['[', ']'], ['{', '}']]

" hdima/python-syntax
let python_highlight_all=1

set backspace=indent,eol,start "Fixes deleting with backspace
set nocompatible "be iMproved, required

set t_Co=256 "Enable 256 colors
syntax on "Turn on syntax highlighting

" Combine static and relative numbering (requires Vim 7.4+ or neovim)
set number
set relativenumber

set laststatus=2 "Always show status bar

set autoindent "Keep same indentation level as on previous line
set tabstop=4 "Tab size is 4 spaces
set shiftwidth=4
set copyindent "Copy the previous indentation on autoindenting
set smarttab "Insert tabs on the start of line according to shiftwidth

set colorcolumn=80 "Set ruler

set incsearch "Show search matches as typed
set hlsearch "Highlight search matches
set ignorecase
set smartcase "If search contains uppercase letter, it's case sensitive

set autoread "Reload file if it was changed

set showcmd "Show incomplete command ("+y)

set pastetoggle=<F2> "Awesome pasting mode on F2 key

set scrolloff=15 "Keep 15 lines above or below when scrolling

let mapleader=" " "Set leader key

" Persistent undo
set undofile
set undodir=~/.config/nvim/undo

" Encoding
set encoding=utf-8
set fileencoding=utf-8

" Better indenting of text blocks on double pressing > or <
vnoremap < <gv
vnoremap > >gv

" Better movement for long lines
nnoremap j gj
nnoremap k gk
nnoremap ^ g^
nnoremap $ g$

" Fast switch between buffers
nnoremap <RIGHT> :bn<CR>
nnoremap <LEFT>  :bp<CR>

" Run Neomake on open of new buffer and on write
autocmd! BufWritePost * Neomake

" Leader + x to open NERDTree
nnoremap <Leader>x :NERDTreeToggle<CR>

" Leave terminal mode by pressing ESC
tnoremap <Leader><Esc> <C-\><C-n>

" F4 to make
nnoremap <F4> :make!<CR>
